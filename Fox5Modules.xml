<?xml version="1.0" encoding="utf-8"?>
<DirectoryDescriptor xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Name>FOX 5 Modules</Name>
  <DirectoryName>Fox5Modules</DirectoryName>
  <IncludeSubDirectories>true</IncludeSubDirectories>
  <PushOnFileChange>true</PushOnFileChange>
  <InsertStatement>
DECLARE
  l_filename VARCHAR2(4000) := :p_filename_without_extension;
  l_file_extension VARCHAR2(4000) := :p_file_extension;
  
  l_file_content_blob BLOB := :p_file_content_blob;
  l_file_content_clob CLOB := :p_file_content_clob;
  l_is_binary_file CHAR;
  
  l_component_name VARCHAR2(4000);
  l_component_type VARCHAR2(4000);
BEGIN

  IF l_filename = 'fox_import' THEN
  
    l_component_type := 'module'; 
    l_component_name := 'Fox/fox_import';
    
  ELSE
    
    l_component_type := 
      CASE l_file_extension
        WHEN '.xml' THEN 'module'
        WHEN '.html' THEN 'text/html'
        WHEN '.htm' THEN 'text/html'
        WHEN '.css' THEN 'text/css'
        WHEN '.png' THEN 'image/png'
        WHEN '.gif' THEN 'image/gif'
        WHEN '.jpg' THEN 'image/jpg'
        WHEN '.jpeg' THEN 'image/jpg'
        WHEN '.js' THEN 'text/javascript'
        WHEN '.ico' THEN 'image/x-icon' 
        WHEN '.mustache' THEN 'text/mustache'     
        WHEN '.swf' THEN 'application/x-shockwave-flash'
      END;
    
    l_component_name := 
      CASE 
        WHEN l_component_type LIKE 'image%' THEN 'img/'
        WHEN l_file_extension = '.css' THEN 'css/'
        WHEN l_file_extension = '.js' THEN 'js/'
      END || l_filename; 
    
  END IF;
  
  l_is_binary_file := CASE
   WHEN l_component_type LIKE 'image%' THEN 'Y' 
   ELSE 'N' END;
  
  INSERT INTO envmgr.fox_components_fox5 (
    name
  , type
  , data
  , bindata
  ) VALUES (
    l_component_name
  , l_component_type
  , CASE WHEN l_is_binary_file = 'N' THEN l_file_content_clob END
  , CASE WHEN l_is_binary_file = 'Y' THEN l_file_content_blob END
  );
  
END;
  </InsertStatement>
  <UpdateStatement>
DECLARE
  l_filename VARCHAR2(4000) := :p_filename_without_extension;
  l_file_extension VARCHAR2(4000) := :p_file_extension;
  
  l_file_content_blob BLOB := :p_file_content_blob;
  l_file_content_clob CLOB := :p_file_content_clob;
  l_is_binary_file CHAR;
  
  l_component_name VARCHAR2(4000);
  l_component_type VARCHAR2(4000);
BEGIN

  IF l_filename = 'fox_import' THEN
  
    l_component_type := 'module'; 
    l_component_name := 'Fox/fox_import';
    
  ELSE
    
    l_component_type := 
      CASE l_file_extension
        WHEN '.xml' THEN 'module'
        WHEN '.html' THEN 'text/html'
        WHEN '.htm' THEN 'text/html'
        WHEN '.css' THEN 'text/css'
        WHEN '.png' THEN 'image/png'
        WHEN '.gif' THEN 'image/gif'
        WHEN '.jpg' THEN 'image/jpg'
        WHEN '.jpeg' THEN 'image/jpg'
        WHEN '.js' THEN 'text/javascript'
        WHEN '.ico' THEN 'image/x-icon' 
        WHEN '.mustache' THEN 'text/mustache'     
        WHEN '.swf' THEN 'application/x-shockwave-flash'
      END;
    
    l_component_name :=
      CASE 
        WHEN l_component_type LIKE 'image%' THEN 'img/'
        WHEN l_file_extension = '.css' THEN 'css/'
        WHEN l_file_extension = '.js' THEN 'js/'
      END || l_filename; 
    
  END IF;
  
  l_is_binary_file := CASE
   WHEN l_component_type LIKE 'image%' THEN 'Y' 
   ELSE 'N' END;
  
  UPDATE envmgr.fox_components_fox5
  SET
    data = CASE WHEN l_is_binary_file = 'N' THEN l_file_content_clob END
  , bindata = CASE WHEN l_is_binary_file = 'Y' THEN l_file_content_blob END
  WHERE name = l_component_name
  AND type = l_component_type;

END;
  </UpdateStatement>
  <DeleteStatement>
DECLARE
  l_filename VARCHAR2(4000) := :p_filename_without_extension;
  l_file_extension VARCHAR2(4000) := :p_file_extension;
  
  l_component_name VARCHAR2(4000);
  l_component_type VARCHAR2(4000);
BEGIN

  IF l_filename = 'fox_import' THEN
  
    l_component_type := 'module'; 
    l_component_name := 'Fox/fox_import';
    
  ELSE
    
    l_component_type := 
      CASE l_file_extension
        WHEN '.xml' THEN 'module'
        WHEN '.html' THEN 'text/html'
        WHEN '.htm' THEN 'text/html'
        WHEN '.css' THEN 'text/css'
        WHEN '.png' THEN 'image/png'
        WHEN '.gif' THEN 'image/gif'
        WHEN '.jpg' THEN 'image/jpg'
        WHEN '.jpeg' THEN 'image/jpg'
        WHEN '.js' THEN 'text/javascript'
        WHEN '.ico' THEN 'image/x-icon' 
        WHEN '.mustache' THEN 'text/mustache'     
        WHEN '.swf' THEN 'application/x-shockwave-flash'
      END;
    
    l_component_name :=
      CASE 
        WHEN l_component_type LIKE 'image%' THEN 'img/'
        WHEN l_file_extension = '.css' THEN 'css/'
        WHEN l_file_extension = '.js' THEN 'js/'
      END || l_filename; 
    
  END IF;
  
  DELETE FROM envmgr.fox_components_fox5
  WHERE name = l_component_name
  AND type = l_component_type;

END;
  </DeleteStatement>
  <DatabaseFileExistsStatement>
WITH q1 AS (
  SELECT
    :p_filename_without_extension filename
  , :p_file_extension file_extension
  FROM dual
), q2 AS (
  SELECT
    CASE q1.filename
      WHEN 'fox_import' THEN 'Fox/fox_import'
      ELSE q1.filename
    END component_name
  , CASE q1.file_extension
      WHEN '.xml' THEN 'module'
      WHEN '.html' THEN 'text/html'
      WHEN '.htm' THEN 'text/html'
      WHEN '.css' THEN 'text/css'
      WHEN '.png' THEN 'image/png'
      WHEN '.gif' THEN 'image/gif'
      WHEN '.jpg' THEN 'image/jpg'
      WHEN '.jpeg' THEN 'image/jpg'
      WHEN '.js' THEN 'text/javascript'
      WHEN '.ico' THEN 'image/x-icon' 
      WHEN '.mustache' THEN 'text/mustache'     
      WHEN '.swf' THEN 'application/x-shockwave-flash'
    END component_type
  , q1.file_extension
  FROM q1
)
, q3 AS (
  SELECT
    CASE 
      WHEN q2.component_type LIKE 'image%' THEN 'img/'
      WHEN q2.file_extension = '.css' THEN 'css/'
      WHEN q2.file_extension = '.js' THEN 'js/'
    END || q2.component_name component_name 
  , q2.component_type
  FROM q2
)
SELECT COUNT(*) result
FROM q3
JOIN envmgr.fox_components_fox5 fcf
ON name = q3.component_name
AND type = q3.component_type
  </DatabaseFileExistsStatement>
  <FetchStatement>
WITH q1 AS (
  SELECT
    :p_filename_without_extension filename
  , :p_file_extension file_extension
  FROM dual
), q2 AS (
  SELECT
    CASE q1.filename
      WHEN 'fox_import' THEN 'Fox/fox_import'
      ELSE q1.filename
    END component_name
  , CASE q1.file_extension
      WHEN '.xml' THEN 'module'
      WHEN '.html' THEN 'text/html'
      WHEN '.htm' THEN 'text/html'
      WHEN '.css' THEN 'text/css'
      WHEN '.png' THEN 'image/png'
      WHEN '.gif' THEN 'image/gif'
      WHEN '.jpg' THEN 'image/jpg'
      WHEN '.jpeg' THEN 'image/jpg'
      WHEN '.js' THEN 'text/javascript'
      WHEN '.ico' THEN 'image/x-icon' 
      WHEN '.mustache' THEN 'text/mustache'     
      WHEN '.swf' THEN 'application/x-shockwave-flash'
    END component_type
  , q1.file_extension
  FROM q1
)
, q3 AS (
  SELECT
    CASE 
      WHEN q2.component_type LIKE 'image%' THEN 'img/'
      WHEN q2.file_extension = '.css' THEN 'css/'
      WHEN q2.file_extension = '.js' THEN 'js/'
    END || q2.component_name component_name 
  , q2.component_type
  FROM q2
)
SELECT fcf.data
FROM q3
JOIN envmgr.fox_components_fox5 fcf
ON name = q3.component_name
AND type = q3.component_type

  </FetchStatement>
  <FetchBinaryStatement>
WITH q1 AS (
  SELECT
    :p_filename_without_extension filename
  , :p_file_extension file_extension
  FROM dual
), q2 AS (
  SELECT
    CASE q1.filename
      WHEN 'fox_import' THEN 'Fox/fox_import'
      ELSE q1.filename
    END component_name
  , CASE q1.file_extension
      WHEN '.xml' THEN 'module'
      WHEN '.html' THEN 'text/html'
      WHEN '.htm' THEN 'text/html'
      WHEN '.css' THEN 'text/css'
      WHEN '.png' THEN 'image/png'
      WHEN '.gif' THEN 'image/gif'
      WHEN '.jpg' THEN 'image/jpg'
      WHEN '.jpeg' THEN 'image/jpg'
      WHEN '.js' THEN 'text/javascript'
      WHEN '.ico' THEN 'image/x-icon' 
      WHEN '.mustache' THEN 'text/mustache'     
      WHEN '.swf' THEN 'application/x-shockwave-flash'
    END component_type
  , q1.file_extension
  FROM q1
)
, q3 AS (
  SELECT
    CASE 
      WHEN q2.component_type LIKE 'image%' THEN 'img/'
      WHEN q2.file_extension = '.css' THEN 'css/'
      WHEN q2.file_extension = '.js' THEN 'js/'
    END || q2.component_name component_name 
  , q2.component_type
  FROM q2
)
SELECT fcf.bindata
FROM q3
JOIN envmgr.fox_components_fox5 fcf
ON name = q3.component_name
AND type = q3.component_type
  </FetchBinaryStatement>
  <FileDataTypeStatement>
WITH q1 AS (
  SELECT
    :p_filename_without_extension filename
  , :p_file_extension file_extension
  FROM dual
), q2 AS (
  SELECT
    CASE q1.filename
      WHEN 'fox_import' THEN 'Fox/fox_import'
      ELSE q1.filename
    END component_name
  , CASE q1.file_extension
      WHEN '.xml' THEN 'module'
      WHEN '.html' THEN 'text/html'
      WHEN '.htm' THEN 'text/html'
      WHEN '.css' THEN 'text/css'
      WHEN '.png' THEN 'image/png'
      WHEN '.gif' THEN 'image/gif'
      WHEN '.jpg' THEN 'image/jpg'
      WHEN '.jpeg' THEN 'image/jpg'
      WHEN '.js' THEN 'text/javascript'
      WHEN '.ico' THEN 'image/x-icon' 
      WHEN '.mustache' THEN 'text/mustache'     
      WHEN '.swf' THEN 'application/x-shockwave-flash'
    END component_type
  , q1.file_extension
  FROM q1
)
, q3 AS (
  SELECT
    CASE 
      WHEN q2.component_type LIKE 'image%' THEN 'img/'
      WHEN q2.file_extension = '.css' THEN 'css/'
      WHEN q2.file_extension = '.js' THEN 'js/'
    END || q2.component_name component_name 
  , q2.component_type
  FROM q2
)
SELECT
CASE WHEN q3.component_type LIKE 'image%'
  THEN 'BLOB'
  ELSE 'CLOB'
END datatype 
FROM q3
JOIN envmgr.fox_components_fox5 fcf
ON name = q3.component_name
AND type = q3.component_type
  </FileDataTypeStatement>
</DirectoryDescriptor>